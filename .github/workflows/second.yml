name: Build Custom MicroPython UF2

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  PICO_SDK_VERSION: 1.5.1
  MICROPYTHON_VERSION: v1.22.2

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          gcc-arm-none-eabi \
          libnewlib-arm-none-eabi \
          build-essential \
          libstdc++-arm-none-eabi-newlib \
          git \
          python3 \
          python3-pip

    - name: Install Pico SDK
      run: |
        git clone --branch ${{ env.PICO_SDK_VERSION }} https://github.com/raspberrypi/pico-sdk.git
        export PICO_SDK_PATH=$PWD/pico-sdk

    - name: Clone MicroPython
      run: |
        git clone --branch ${{ env.MICROPYTHON_VERSION }} https://github.com/micropython/micropython.git

    - name: Configure HID and Wireless
      run: |
        cd micropython/ports/rp2
        # Enable USB HID
        echo 'USBD_HID_MOUSE = 1' >> boards/PICO_W/mpconfigboard.mk
        echo 'USBD_HID_KEYBOARD = 1' >> boards/PICO_W/mpconfigboard.mk
        
        # Enable wireless features
        echo 'MICROPY_PY_BLUETOOTH = 1' >> boards/PICO_W/mpconfigboard.mk
        echo 'MICROPY_PY_NETWORK_CYW43 = 1' >> boards/PICO_W/mpconfigboard.mk
        echo 'MICROPY_PY_WIZNET5K = 0' >> boards/PICO_W/mpconfigboard.mk

    - name: Build MicroPython
      run: |
        cd micropython
        make -C mpy-cross
        cd ports/rp2
        make BOARD=PICO_W clean
        make BOARD=PICO_W

    - name: Generate UF2
      run: |
        cd micropython/ports/rp2/build-PICO_W
        cp firmware.uf2 ${{ github.workspace }}/micropython-pico2w-hid-ble.uf2

    - name: Upload UF2 artifact
      uses: actions/upload-artifact@v4
      with:
        name: custom-micropython-uf2
        path: micropython-pico2w-hid-ble.uf2
